#!/usr/bin/env php
<?php

$rootOfApp = __DIR__ . "/../../../../";

#require_once($rootOfApp . "/bootstrap.php");
ini_set("memory_limit", "256M");

$sdkOutputPath = isset($argv[1]) ? $argv[1] : APP_ROOT . "/vendor/segura/lib" . strtolower(APP_NAME) . "/";
$appName       = isset($argv[2]) ? $argv[2] : null;
$remoteApiUri  = isset($argv[3]) ? $argv[3] : null;
$namespace     = isset($argv[4]) ? $argv[4] : "Gone";

if(defined("APP_CORE_NAME")) {
    $scope = APP_CORE_NAME;
}else{
    $rootOfApp = __DIR__ . "/../";
    require_once("{$rootOfApp}/vendor/autoload.php");
    define("APP_ROOT", __DIR__ . "/../");
    $scope = Gone\AppCore\App::class;

    define("APP_NAME", $appName);
    define("APP_CORE_NAME", "{$namespace}\\{$appName}");
}

try {
    $databaseConfigs = $scope::Container()->get(\Gone\AppCore\DbConfig::class);
}catch(\Gone\AppCore\Exceptions\DbConfigException $dbConfigException){
    $databaseConfigs = null;
}

$zenderator = new \Zenderator\Zenderator(
    $rootOfApp,
    $databaseConfigs
);

$zenderator->runSdkifier($sdkOutputPath, $remoteApiUri);
